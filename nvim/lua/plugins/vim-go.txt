return {
  {
    "fatih/vim-go",
    ft = "go",
    build = ":GoInstallBinaries", -- This will install all the required Go binaries
    config = function()
      -- Vim-Go configuration
      vim.g.go_highlight_functions = 1
      vim.g.go_highlight_function_calls = 1
      vim.g.go_highlight_fields = 1
      vim.g.go_highlight_types = 1
      vim.g.go_highlight_operators = 1
      vim.g.go_highlight_extra_types = 1
      vim.g.go_highlight_build_constraints = 1
      vim.g.go_highlight_generate_tags = 1
      
      -- Disable vim-go :GoDef short cut (gd)
      -- this is handled by LSP
      vim.g.go_def_mapping_enabled = 0
      
      -- Disable vim-go formatting since we'll use LSP
      vim.g.go_fmt_autosave = 0
      vim.g.go_imports_autosave = 0
      
      -- Key mappings
      local function map(mode, lhs, rhs, opts)
        local options = { noremap = true, silent = true }
        if opts then
          options = vim.tbl_extend("force", options, opts)
        end
        vim.api.nvim_set_keymap(mode, lhs, rhs, options)
      end

      -- Go specific mappings
      map("n", "<leader>gr", ":GoRun<CR>", { desc = "Go Run" })
      map("n", "<leader>gt", ":GoTest<CR>", { desc = "Go Test" })
      map("n", "<leader>gi", ":GoImpl<CR>", { desc = "Go Implement" })
      map("n", "<leader>gd", ":GoDeclsDir<CR>", { desc = "Go Declarations in Dir" })
      map("n", "<leader>ga", ":GoAlternate<CR>", { desc = "Go Alternate" })
    end,
  }
}
